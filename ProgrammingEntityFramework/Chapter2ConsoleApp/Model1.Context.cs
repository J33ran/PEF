//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chapter2ConsoleApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PEF : DbContext
    {
        public PEF()
            : base("name=PEF")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<vOfficeAddress> vOfficeAddresses { get; set; }
    
        public virtual int DeleteContact(Nullable<int> contactid)
        {
            var contactidParameter = contactid.HasValue ?
                new ObjectParameter("contactid", contactid) :
                new ObjectParameter("contactid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteContact", contactidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertContact(string firstName, string lastName, string title)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertContact", firstNameParameter, lastNameParameter, titleParameter);
        }
    
        public virtual int UpdateContact(Nullable<int> contactID, string firstName, string lastName, string title)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateContact", contactIDParameter, firstNameParameter, lastNameParameter, titleParameter);
        }
    
        public virtual ObjectResult<GetContactsbyState> GetContactsbyState(string statecode)
        {
            var statecodeParameter = statecode != null ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactsbyState>("GetContactsbyState", statecodeParameter);
        }
    }
}
